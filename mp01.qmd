---
title: <center>Mini Project 1</center>
format: html
execute:
  code-fold: true
---

<center>**Exploratory Data Analysis**</center>

```{r}
#| code-fold: true
#| message: false
#| warning: false


# Load required packages
if(!require("tidyverse")) install.packages("tidyverse")
library(dplyr)
library(stringr)
library(lubridate)
library(readr)
library(DT)
library(knitr)
library(scales)

# Ensure data directory exists
if(!dir.exists(file.path("data", "mp01"))){
  dir.create(file.path("data", "mp01"), showWarnings=FALSE, recursive=TRUE)
}

# Download datasets if not already available
GLOBAL_TOP_10_FILENAME <- file.path("data", "mp01", "global_top10_alltime.tsv")
if(!file.exists(GLOBAL_TOP_10_FILENAME)){
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv", 
                destfile=GLOBAL_TOP_10_FILENAME)
}

COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.tsv")
if(!file.exists(COUNTRY_TOP_10_FILENAME)){
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv", 
                destfile=COUNTRY_TOP_10_FILENAME)
}

#Load data
GLOBAL_TOP_10 <- read_tsv("data/mp01/global_top10_alltime.tsv", na = "N/A")
COUNTRY_TOP_10 <- read_tsv("data/mp01/country_top10_alltime.tsv", na = "N/A")

# Convert all column names to snake_case
GLOBAL_TOP_10 <- GLOBAL_TOP_10 %>% rename_with(~ str_replace_all(., " ", "_") %>% str_to_lower())
COUNTRY_TOP_10 <- COUNTRY_TOP_10 %>% rename_with(~ str_replace_all(., " ", "_") %>% str_to_lower())

# Fix "N/A" values in season_title to proper NA values
GLOBAL_TOP_10 <- GLOBAL_TOP_10 |>
    mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))

# Rename for convenience
country_top10 <- COUNTRY_TOP_10 %>%
  rename(country = country_name)

# Function to format column titles
format_titles <- function(df){
    colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
    df
}

# Get basic stats for executive summary
total_countries <- COUNTRY_TOP_10 |> distinct(country_iso2) |> nrow()
date_range <- paste(min(GLOBAL_TOP_10$week), "to", max(GLOBAL_TOP_10$week))
total_shows <- GLOBAL_TOP_10 |> distinct(show_title) |> nrow()

# Make sure GLOBAL_TOP_10 and COUNTRY_TOP_10 (or country_top10) are already loaded
# If they are not loaded earlier in the file, read them here:
# GLOBAL_TOP_10 <- read_tsv("data/mp01/global_top10_alltime.tsv", na="N/A", show_col_types = FALSE)
# COUNTRY_TOP_10 <- read_tsv("data/mp01/country_top10_alltime.tsv", na="N/A", show_col_types = FALSE)
# country_top10 <- COUNTRY_TOP_10 %>% rename(country = country_name)

# Observations / date range / unique titles / countries
exec_total_countries <- country_top10 %>% pull(country) %>% unique() %>% length()
exec_date_min <- min(GLOBAL_TOP_10$week, na.rm = TRUE)
exec_date_max <- max(GLOBAL_TOP_10$week, na.rm = TRUE)
exec_rowcount <- nrow(GLOBAL_TOP_10)
exec_unique_titles <- GLOBAL_TOP_10 %>% distinct(show_title) %>% nrow()

# Nice formatted labels
exec_date_range <- paste0(format(exec_date_min, "%Y-%m-%d"), " to ", format(exec_date_max, "%Y-%m-%d"))
exec_rowcount_fmt <- comma(exec_rowcount)
exec_unique_titles_fmt <- comma(exec_unique_titles)
exec_total_countries_fmt <- comma(exec_total_countries)
```
## Executive Summary

This report explores global Netflix viewing patterns across `r exec_total_countries_fmt` countries between `r exec_date_range`. It highlights what audiences are watching, identifies the most popular shows and films, and reveals how viewing preferences differ by region. The dataset encompasses `r exec_unique_titles_fmt` unique titles and `r exec_rowcount_fmt` weekly records.

**Key Findings**

- **Netflix availability:** `r exec_total_countries_fmt` countries worldwide.  
- **Data coverage:** `r exec_rowcount_fmt` weekly observations across the date range `r exec_date_range`.  
- **Unique titles analyzed:** `r exec_unique_titles_fmt`.

## Initial Data Exploration
```{r}
#| code-fold: true
library(DT)
GLOBAL_TOP_10 |> 
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE), caption = "Basic Data Exploration - First 20 Rows")
```

```{r}
#| code-fold: true
GLOBAL_TOP_10 |> 
    mutate(`runtime_(minutes)` = round(60 * runtime)) |>
    select(-season_title, -runtime) |>
    format_titles() |>
    head(n=20) |>
    datatable(
      options = list(searching = FALSE, info = FALSE),
      caption = "Improved Data Exploration - Formatted Table"
    ) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

## Global Netflix Data
```{r}
#| code-fold: true
GLOBAL_TOP_10 |> 
    mutate(`runtime_(minutes)` = round(60 * runtime),
           season_title = ifelse(is.na(season_title), "NA", season_title)) |>
    select(-runtime) |>
    head(n=20) |>
    datatable(
      options = list(searching = FALSE, info = FALSE), 
      caption = "Global Top 10 Netflix Shows"
    ) |>
    formatRound(c('weekly_hours_viewed', 'weekly_views'))
```

## Country Netflix Data
```{r}
#| code-fold: true
COUNTRY_TOP_10_display <- COUNTRY_TOP_10 |> 
  mutate(season_title = ifelse(is.na(season_title), "NA", season_title)) |>
  head(n=20)

cols_to_format <- intersect(colnames(COUNTRY_TOP_10_display), 
                           c('weekly_hours_viewed', 'weekly_views'))

if(length(cols_to_format) > 0) {
  COUNTRY_TOP_10_display |>
    datatable(
      options = list(searching = FALSE, info = FALSE),
      caption = "Country Top 10 Netflix Shows"
    ) |>
    formatRound(cols_to_format)
} else {
  COUNTRY_TOP_10_display |>
    datatable(
      options = list(searching = FALSE, info = FALSE),
      caption = "Country Top 10 Netflix Shows"
    )
}
```

# Exploratory Questions and Solutions
##### 1. How many different countries does Netflix operate in?
```{r}
#| code-fold: true
#| echo: TRUE
#| message: false
#| warning: false
n_countries <- n_distinct(country_top10$country)
```
Netflix operates in `r n_countries` countries.

##### 2. Which non-English-language film has spent the most cumulative weeks in the global top 10? How many weeks did it spend?
```{r}
#| code-fold: true
#| echo: TRUE
#| message: false
#| warning: false

top_non_english <- GLOBAL_TOP_10 %>%
  filter(category == "Films (Non-English)") %>%   # restrict only to films
  group_by(show_title) %>%
  summarise(cumulative_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(cumulative_weeks)) %>%
  slice(1)
```
Non-English film with most cumulative weeks: 
`r top_non_english$show_title[1]` (`r top_non_english$cumulative_weeks[1]` weeks)

##### 3. What is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10? How long is it in minutes?
```{r}
#| code-fold: true
#| echo: TRUE
#| message: false
#| warning: false

longest_film <- GLOBAL_TOP_10 %>%
  filter(str_detect(category, "Films")) %>%        # restrict to films
  filter(!is.na(runtime)) %>%
  mutate(runtime_minutes = round(runtime * 60)) %>%
  arrange(desc(runtime_minutes)) %>%
  slice(1) %>%
  select(show_title, runtime_minutes)
```
Longest film globally: 
`r longest_film$show_title[1]` (`r longest_film$runtime_minutes[1]` minutes)

##### 4. For each of the four categories, what program has the most total hours of global viewership?
```{r}
#| code-fold: true

top_programs_by_category <- GLOBAL_TOP_10 |>
  group_by(category, show_title) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = "drop") |>
  group_by(category) |>
  slice_max(total_hours, n = 1) |>
  arrange(desc(total_hours))
```
Most hours of global viewership by category:
```{r}
#| code-fold: true
top_programs_by_category |>
  mutate(total_hours = scales::comma(total_hours)) |>
  select(category, show_title, total_hours) |>
  format_titles() |>
  datatable(
    options = list(searching = FALSE, info = FALSE),
    caption = "Most Hours by Category"
  )
```

##### 5. Which TV show had the longest run in a country’s Top 10? How long was this run and in what country did it occur?
```{r}
#| code-fold: true
longest_country_run <- country_top10 %>%
  slice_max(cumulative_weeks_in_top_10, n = 1) %>%
  select(country, show_title, cumulative_weeks_in_top_10)
```
Longest run: 
`r longest_country_run$show_title[1]` in `r longest_country_run$country[1]` (`r longest_country_run$cumulative_weeks_in_top_10[1]` weeks)

##### 6. Netflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?
```{r}
#| code-fold: true
##### 6. Netflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?
#| code-fold: true
#| echo: true
#| message: false
#| warning: false

country_history <- country_top10 %>%
  group_by(country) %>%
  summarise(
    weeks_recorded = n_distinct(week),
    last_week = max(week, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  slice_min(weeks_recorded, n = 1) %>%
  mutate(last_week = format(as.Date(last_week), "%B %d, %Y"))
```
Country with shortest Netflix history: 
`r country_history$country[1]` (`r country_history$weeks_recorded[1]` weeks, ended on `r country_history$last_week[1]`)

##### 7. What is the total viewership of the TV show Squid Game? Note that there are three seasons total and we are looking for the total number of hours watched across all seasons.
```{r}
#| code-fold: true
squid_game_views <- GLOBAL_TOP_10 %>%
  filter(str_detect(show_title, "Squid Game")) %>%
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE))

```
Total viewership of Squid Game: `r scales::comma(squid_game_views$total_hours)` hours.

##### 8. The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021? Note that Netflix does not provide the weekly_views values that far back in the past, but you can compute it yourself using the total view time and the runtime.
```{r}
#| code-fold: true
red_notice_views <- GLOBAL_TOP_10 %>%
  filter(show_title == "Red Notice", lubridate::year(week) == 2021) %>%
  mutate(estimated_views = weekly_hours_viewed / 1.9667) %>%  # runtime = 1h 58m ≈ 1.9667 hrs
  summarise(total_estimated_views = sum(estimated_views))
```
Approximate views for *Red Notice* in 2021: `r format(round(red_notice_views$total_estimated_views), big.mark=",")`.

##### 9. How many Films reached Number 1 in the US but did not originally debut there? That is, find films that first appeared on the Top 10 chart at, e.g., Number 4 but then became more popular and eventually hit Number 1? What is the most recent film to pull this off?
```{r}
#| code-fold: true

us_films_analysis <- COUNTRY_TOP_10 |>
  filter(country_name == "United States", str_detect(category, "Films")) |>
  group_by(show_title) |>
  arrange(week) |>
  mutate(
    ever_hit_1 = any(weekly_rank == 1),
    debut_rank = first(weekly_rank)
  ) |>
  filter(ever_hit_1 == TRUE, debut_rank > 1) |>
  ungroup() |>
  distinct(show_title) |>
  nrow()

most_recent_film <- COUNTRY_TOP_10 |>
  filter(country_name == "United States", str_detect(category, "Films")) |>
  group_by(show_title) |>
  arrange(week) |>
  mutate(
    ever_hit_1 = any(weekly_rank == 1),
    debut_rank = first(weekly_rank),
    latest_week = max(week)
  ) |>
  filter(ever_hit_1 == TRUE, debut_rank > 1) |>
  ungroup() |>
  arrange(desc(latest_week)) |>
  slice(1)

# Inline summary
summary_line <- paste0(
  "There were ", us_films_analysis,
  " films that reached #1 in the US but did not debut there. ",
  "The most recent was ", most_recent_film$show_title[1], " on ", format(most_recent_film$latest_week[1], "%B %d, %Y"), "."
)
cat(summary_line)


```



##### 10. Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?
```{r}
#| code-fold: true
top_countries_debut <- country_top10 %>%
  filter(str_detect(category, "TV")) %>%
  group_by(show_title) %>%
  filter(week == min(week)) %>%                   # only true debut week
  summarise(num_countries = n_distinct(country), .groups = "drop") %>%
  arrange(desc(num_countries)) %>%
  slice(1)
```
TV show with widest debut:
`r top_countries_debut`
```{r}
#| echo: false
DT::datatable(top_countries_debut, options = list(pageLength = 5), caption = "TV Shows with Widest Debut")
```

## Press Releases

### Press Release 1: Upcoming Season of *Stranger Things*
**“Stranger Things Returns: The Global Phenomenon Prepares for Season 5!”**  
Netflix’s hit series *Stranger Things* is set to release its fifth and final season at the end of 2025. The previous four seasons have captivated audiences worldwide, accumulating a total of over 2,967,980,000 hours of global viewership. The show consistently dominated the Top 10 for up to 19 weeks, reflecting its enduring popularity. Its multinational appeal is clear, with *Stranger Things* charting in over 93 countries, solidifying its status as a global cultural phenomenon.

---

### Press Release 2: Commercial Success in India
**“Netflix Sees Rapid Growth in India with Hindi Hits”**  
Netflix is experiencing a surge in popularity across India, driven by Hindi-language films and TV shows. Top-performing titles, including *Sacred Games, Darlings,* and *Delhi Crime*, have collectively spent 37 weeks in India’s Top 10 rankings. These strong performances demonstrate Netflix’s growing success with localized content and highlight India’s importance as a strategic regional market.

---

### Press Release 3: Global Film Phenomenon
**“Netflix Films Captivate Worldwide Audiences”**  
Netflix films continue to attract global audiences, with some English and non-English titles achieving exceptional longevity in the charts. The longest-running non-English film, *All Quiet on the Western Front*, spent 23 weeks in the Global Top 10, while *Pushpa 2: The Rule (Reloaded Version)* ran for an impressive 224 minutes. Additionally, *KPop Demon Hunters* became the most recent film to climb to #1 in the U.S. after debuting lower, underscoring Netflix’s ability to drive sustained audience engagement worldwide.

---

Overall, Netflix’s performance data reveals both strong global engagement and a rapidly growing regional market presence, reinforcing its status as the world’s leading streaming platform.